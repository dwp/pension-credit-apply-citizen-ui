# Host node environment (development | production)
NODE_ENV=development

# Disable TLS verification for dev purposes
# Do not set this in a production environment
NODE_TLS_REJECT_UNAUTHORIZED=0

# Basic debugging
DEBUG=casa*

# Application listening port
PORT=3000

# Context path
# The application will serve up requests on this context path. Must have a
# leading and trailing slash.
# Default: '/'
CONTEXT_PATH=/

# Log level
# One of: fatal, error, warn, info, debug, trace, silent
LOG_LEVEL=debug

# Inbound and outbound request tracing HTTP header names to use when recieving
# making requests respectively.
# Note that AWS load balancers use the header `X-Amzn-Trace-Id` for this purpose
# Default (for both): `X-Request-Id`
TRACE_REQUEST_HEADER_NAME=X-Request-Id
OUTBOUND_TRACE_REQUEST_HEADER_NAME=X-Request-Id

# Session cookie name
SESSION_COOKIE_NAME=pcsessionid

# Session expiry time (in seconds)
SESSION_TTL=3600

# URL of address service API
ADDRESSSERVICE_API_ENDPOINT=https://localhost:5000/location-service/v1

# Timeout applied to all calls to other service APIs (in seconds)
# Note that a timeout will trigger another retry, and this service is configured
# to try 3 times. So, for example, a timeout of 5 seconds could take up to 15
# seconds to finally timeout after all retries.
HTTP_TIMEOUT=10

# Redis hosts for session storage
# Specify eeach host in <hostname>:<port> format, separating each by a comma, eg
# REDIS_HOST=localhost:6379,localhost:7000
#
# If your cluster requires a password, specify for each node in the format:
# REDIS_HOSTS=password@localhost:6401,password@localhost:6402
REDIS_HOSTS=

# If your Redis setup is running in Cluster mode, enable this, otherwise we'll
# only connect to the first host in `REDIS_HOSTS`
REDIS_CLUSTER_MODE=false

# Toggle encryption used when storing session data
# One of: <empty>, local, kms
# Leave empty to disable encryption
REDIS_ENCRYPTION_MODE=local

# For encrypting data in Redis, specify the alias of a KMS CMK
REDIS_ENCRYPTION_ALIAS=alias/ApplyCitizenUiKey

# Google Tag Manager ID, added to GTM snippet in page layout.
GOOGLE_TAG_MANAGER_ID=

# Enables Content Security Policy header, including adding a nonce value to
# res.locals for use with inline script tags.
ENABLE_CSP=true

# TLS configuration for HTTPS server. If neither a KEY or CERT is specified,
# then the service will not listen over a secure socket.
#
# Example method for generating self-signed cert/key:
# ```
# openssl req -x509 -nodes -days 365 -newkey rsa:4096 -keyout selfsigned-key.pem -out selfsigned-crt.pem
# ```
#
# Note that values must not contain newlines, and must be surrounded by
# quote marks, otherwise they will not be parsed correctly by the application.
# `dotenv` requires the quotes.
#
# (boolean) USE_TLS = Toggle TLS mode on or off (true / false)
# (string) TLS_KEY = SSL key
# (string) TLS_CERT = SSL certificate
USE_TLS=false
TLS_CERT=
TLS_KEY=

# These AWS settings are required to work with localstack mock AWS endpoints
# only and MUST NOT be included in any non-local environments.
AWS_ACCESS_KEY_ID=foo
AWS_SECRET_ACCESS_KEY=bar
AWS_REGION=eu-west-2
AWS_KMS_ENDPOINT=http://localhost:4566
